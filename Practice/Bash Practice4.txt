# 1. Write a short script to count the total number of .txt files in the current directory, and print that number to the screen.
ls -l | wc -l
#or
i =0
for file in *.txt
do
let i=$ i+1
done
echo $i

# 2. The default "rm" command will not ask before it deletes any regular files. Write a short script called "safe rm" so that it creates a copy before deleting a single file, by doing the following: • Take one and only one argument on the command line. Print an error message if no or more than one argument is provided. • Create a "safe rm recycle" directory in the current directory if it is not already created. • Copy the file specified by the first argument to this "rm safe recycle" folder. • Remove this file in the current working directory.
if [ ” $#” −ne 1 ]
then
echo ”Only one argument is accepted ! ”
exit
fi
if [ ! −d ”safe_rm_recycle ” ]
then
mkdir safe_rm_recycle
else
echo ”Warning : The recycler directory already exists .”
fi
cp $1 safe_rm_recycle/
rm $1

# 3. Write a bash script that allows the user to enter their top three ice cream flavors. Your script should print the name of all three flavors. 
read -p "Enter your three ice cream flavors : " ice1 ice2 ice3
echo "Thanks $USER!"
echo "1# ${ice1}"
echo "2# ${ice2}"
echo "3# ${ice3}"

# 4. Write a shell script that allows the user to enter any existing file name. The program must then copy the file to the /tmp directory. An advanced solution will check if the file exists.
read -p "Enter any file name : " filename
# if file exists, than copy it
if [ -f "${filename}" ]
then
cp -v "$filename" /tmp
else
echo "$0: $filename not found."
fi

# 5. Write a simple calculator program that allows the user to enter two numeric values and an operand. The program should then print the result of the operation on both numbers. Make sure it works according to the operand entered. #operand: ( +, -, /, *)#
read -p "Enter two values : " a b
read -p "Enter operand ( +, -, /, *) : " op
ans=$(( $a $op $b ))
echo "$a $op $b = $ans"

# 6. Write a shell program to read a number (such as 123) and find the sum of the digits (1+2+3=6).
#store the no
num=$1
#store the value of sum
sum=0
if [ $# -ne 1 ]
then
echo "$0 number"
exit 1
fi
while [ $num -gt 0 ]
do
digit=$(( num%10 ))
num=$(( num/10 ))
sum=$(( digit+sum ))
done
echo "Sum of digits = $sum"